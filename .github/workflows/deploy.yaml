name: Deploy Portfolio via Docker Hub

on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and Push Docker Image
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/amd64
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/portfolio:latest
          ${{ secrets.DOCKER_USERNAME }}/portfolio:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.PORTFOLIO_SSH_KEY }}" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
    
    - name: Deploy to Server
      run: |
        ssh -i ~/.ssh/deploy_key portfolio@${{ secrets.SERVER_HOST }} << 'EOF'
          cd /opt/portfolio
          
          # Initialize git repository if not exists
          if [ ! -d ".git" ]; then
            echo "Initializing git repository..."
            git init
            git remote add origin git@github.com:${{ github.repository }}.git
          fi
          
          # Pull latest code
          git fetch origin main
          git reset --hard origin/main
          
          # Create .env if missing
          if [ ! -f .env ]; then
            echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" > .env
            echo "SECRET_KEY=$(openssl rand -hex 32)" >> .env
          fi
          
          # Pull latest image
          docker pull ${{ secrets.DOCKER_USERNAME }}/portfolio:latest
          
          # Stop and start with compose
          docker-compose down || true
          docker-compose up -d
          
          # Health check
          sleep 30
          if curl -f http://localhost:5000/; then
            echo "✅ Deployment successful!"
          else
            echo "❌ Deployment failed!"
            docker-compose logs
            exit 1
          fi
        EOF