name: Deploy to Pi5 via Docker Hub

on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/arm64  # Important: Pi5 uses ARM64
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/portfolio:latest
          ${{ secrets.DOCKER_USERNAME }}/portfolio:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: self-hosted
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Create application directory
      run: |
        sudo mkdir -p /opt/portfolio
        sudo chown $USER:$USER /opt/portfolio
    
    - name: Copy docker-compose file and configs
      run: |
        # Look for docker-compose file with either .yml or .yaml extension
        if [ -f "docker-compose.yml" ]; then
          cp docker-compose.yml /opt/portfolio/
          echo "✅ Copied docker-compose.yml"
        elif [ -f "docker-compose.yaml" ]; then
          cp docker-compose.yaml /opt/portfolio/docker-compose.yml
          echo "✅ Copied docker-compose.yaml as docker-compose.yml"
        else
          echo "❌ Neither docker-compose.yml nor docker-compose.yaml found in $(pwd)"
          echo "Available files:"
          ls -la
          exit 1
        fi
        
        # Copy any other config files if they exist
        [ -f ".env.example" ] && cp .env.example /opt/portfolio/ || true
        [ -f "entrypoint.sh" ] && cp entrypoint.sh /opt/portfolio/ || true
    
    - name: Pull latest Docker image
      run: |
        docker pull ${{ secrets.DOCKER_USERNAME }}/portfolio:latest
    
    - name: Deploy with Docker Compose
      run: |
        cd /opt/portfolio
        
        # Create .env file with secrets
        echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" > .env
        echo "IMAGE_TAG=latest" >> .env
        echo "SECRET_KEY=${{ secrets.SECRET_KEY || 'fallback-secret-key' }}" >> .env
        
        # Stop existing containers
        docker-compose down || true
        
        # Start new containers
        docker-compose up -d
        
        # Clean up old images
        docker image prune -f
    
    - name: Health check
      run: |
        sleep 30
        # Try HTTPS first, then HTTP, then port 5000 for fallback
        if curl -f https://jaquesburger.com/health; then
          echo "✅ HTTPS Deployment successful!"
        elif curl -f http://jaquesburger.com/health; then
          echo "✅ HTTP Deployment successful!"
        elif curl -f http://localhost:5000/health; then
          echo "✅ Development mode deployment successful!"
        else
          echo "❌ Deployment failed!"
          cd /opt/portfolio
          docker-compose logs portfolio-app
          exit 1
        fi