name: Deploy to Pi5 via Docker Hub

on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/arm64
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/portfolio:latest
          ${{ secrets.DOCKER_USERNAME }}/portfolio:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: self-hosted
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create application directory
      run: |
        sudo mkdir -p /opt/portfolio
        sudo chown $USER:$USER /opt/portfolio

    - name: Copy all configuration files
      run: |
        cp "$GITHUB_WORKSPACE/docker-compose.yaml" /opt/portfolio/docker-compose.yml
        cp "$GITHUB_WORKSPACE/nginx.conf" /opt/portfolio/
        cp "$GITHUB_WORKSPACE/nginx-site.conf" /opt/portfolio/
        [ -f "$GITHUB_WORKSPACE/.env.example" ] && cp "$GITHUB_WORKSPACE/.env.example" /opt/portfolio/ || true
        [ -f "$GITHUB_WORKSPACE/entrypoint.sh" ] && cp "$GITHUB_WORKSPACE/entrypoint.sh" /opt/portfolio/ || true

    - name: Pull Docker images
      run: |
        docker pull ${{ secrets.DOCKER_USERNAME }}/portfolio:latest
        docker pull nginx:alpine

    - name: Deploy with Docker Compose
      run: |
        cd /opt/portfolio

        # Create .env file with secrets
        echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" > .env
        echo "IMAGE_TAG=latest" >> .env
        echo "SECRET_KEY=${{ secrets.SECRET_KEY || 'fallback-secret-key' }}" >> .env
        echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> .env
        echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> .env
        echo "RECAPTCHA_SITE_KEY=${{ secrets.RECAPTCHA_SITE_KEY }}" >> .env
        echo "RECAPTCHA_SECRET_KEY=${{ secrets.RECAPTCHA_SECRET_KEY }}" >> .env

        # Stop and remove existing containers
        docker-compose down || true
        docker rm -f nginx_proxy portfolio_web || true

        # Start new containers
        docker-compose up -d

        # Show initial logs
        sleep 5
        echo "🔍 Container status:"
        docker ps
        echo "📋 Initial logs:"
        docker-compose logs --tail=20

        # Clean up old images
        docker image prune -f

    - name: Health check
      run: |
        cd /opt/portfolio
        echo "⏳ Waiting for services to start..."
        sleep 30

        check_health() {
          local url=$1
          local name=$2
          echo "Checking $name..."
          if curl -f -k -m 10 "$url" > /dev/null 2>&1; then
            echo "✅ $name is responding!"
            return 0
          else
            echo "❌ $name is not responding"
            return 1
          fi
        }

        if check_health "https://jaquesburger.com/" "HTTPS endpoint"; then
          echo "✅ Deployment successful!"
          echo "🔒 SSL is working correctly"
        elif check_health "http://jaquesburger.com/" "HTTP endpoint"; then
          echo "⚠️ HTTP is working but HTTPS redirect may have issues"
          docker-compose logs nginx --tail=50
        else
          echo "❌ Both HTTP and HTTPS checks failed!"
          echo "📋 Container status:"
          docker ps -a
          echo "📋 Nginx logs:"
          docker-compose logs nginx --tail=50
          echo "📋 App logs:"
          docker-compose logs portfolio-app --tail=50

          echo "🔍 Testing internal connectivity:"
          docker exec nginx_proxy sh -c "apk add --no-cache curl && curl -I http://portfolio-app:5000/" || echo "Internal connection failed"

          exit 1
        fi